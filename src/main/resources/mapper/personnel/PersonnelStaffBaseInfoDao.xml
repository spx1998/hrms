<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hrms.personnel.dao.PersonnelStaffBaseInfoDao">

    <resultMap type="com.hrms.personnel.entity.StaffBaseInfo" id="StaffBaseInfoMap">
        <result property="staffId" column="staff_id" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="sex" column="sex" jdbcType="INTEGER"/>
        <result property="birthday" column="birthday" jdbcType="TIMESTAMP"/>
        <result property="phoneNumber" column="phone_number" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="address" column="address" jdbcType="VARCHAR"/>
        <result property="education" column="education"/>
        <result property="nation" column="nation"/>
        <result property="school" column="school"/>
        <result property="politicalStatus" column="political_status"/>
        <result property="status" column="status"/>
    </resultMap>
    <insert id="createStaffInfo">
        insert into staff_base_info(staff_id, name, sex, birthday, education, school, nation, political_status,
                                    phone_number, email, address)
        values (#{staffCreateInfo.staffId}, #{staffCreateInfo.name}, #{staffCreateInfo.sex},
                #{staffCreateInfo.birthday}, #{staffCreateInfo.education}, #{staffCreateInfo.school},
                #{staffCreateInfo.nation}, #{staffCreateInfo.politicalStatus}, #{staffCreateInfo.phoneNumber},
                #{staffCreateInfo.email},
                #{staffCreateInfo.address});
    </insert>
    <update id="updateStaffInfo">
        update staff_base_info
        set name            = #{staffDetailInfo.name},
            sex=#{staffDetailInfo.sex},
            nation=#{staffDetailInfo.nation},
            school=#{staffDetailInfo.school},
            birthday=#{staffDetailInfo.birthday},
            education=#{staffDetailInfo.education},
            political_status=#{staffDetailInfo.politicalStatus},
            email=#{staffDetailInfo.email},
            phone_number=#{staffDetailInfo.phoneNumber},
            address=#{staffDetailInfo.address}
        where staff_id = #{staffDetailInfo.staffId};
    </update>
    <delete id="deleteStaffInfo">
        delete
        from staff_base_info
        where staff_id = #{staffId}
    </delete>
    <select id="getStaffList" resultMap="StaffBaseInfoMap">
        select *
        from staff_base_info
        where status = 'enable';
    </select>
    <select id="getStaffById" resultMap="StaffBaseInfoMap">
        select *
        from staff_base_info
        where staff_id = #{staffId}
    </select>
    <select id="getPendingList" resultMap="StaffBaseInfoMap">
        select *
        from staff_base_info
        where status in ('create', 'pending')
    </select>

</mapper>